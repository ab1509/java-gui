import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class GemsDatabaseGUI extends JFrame {
    private JComboBox<String> userTypeComboBox;
    private JTextField usernameField;
    private JPasswordField passwordField;
    private JCheckBox showPasswordCheckBox;
    private JButton loginButton;
    private JButton exitButton;

    public GemsDatabaseGUI() {
        setTitle("Login Page");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(500, 400);
        setLocationRelativeTo(null);

        JPanel panel = new JPanel();
        panel.setLayout(new GridBagLayout());
        GridBagConstraints constraints = new GridBagConstraints();
        constraints.fill = GridBagConstraints.HORIZONTAL;
        constraints.insets = new Insets(5, 5, 5, 5);

        // User Type ComboBox
        JLabel userTypeLabel = new JLabel("User Type:");
        constraints.gridx = 0;
        constraints.gridy = 0;
        panel.add(userTypeLabel, constraints);

        userTypeComboBox = new JComboBox<>(new String[]{"Owner", "Employee"});
        constraints.gridx = 1;
        constraints.gridy = 0;
        constraints.gridwidth = 2;
        panel.add(userTypeComboBox, constraints);

        // Username Field
        JLabel usernameLabel = new JLabel("Username:");
        constraints.gridx = 0;
        constraints.gridy = 1;
        constraints.gridwidth = 1;
        panel.add(usernameLabel, constraints);

        usernameField = new JTextField();
        constraints.gridx = 1;
        constraints.gridy = 1;
        constraints.gridwidth = 2;
        panel.add(usernameField, constraints);

        // Password Field
        JLabel passwordLabel = new JLabel("Password:");
        constraints.gridx = 0;
        constraints.gridy = 2;
        constraints.gridwidth = 1;
        panel.add(passwordLabel, constraints);

        passwordField = new JPasswordField();
        constraints.gridx = 1;
        constraints.gridy = 2;
        constraints.gridwidth = 2;
        panel.add(passwordField, constraints);

        // Show Password CheckBox
        showPasswordCheckBox = new JCheckBox("Show Password");
        constraints.gridx = 0;
        constraints.gridy = 3;
        constraints.gridwidth = 3;
        panel.add(showPasswordCheckBox, constraints);

        // Login Button
        loginButton = new JButton("Login");
        constraints.gridx = 0;
        constraints.gridy = 4;
        constraints.gridwidth = 1;
        panel.add(loginButton, constraints);

        // Exit Button
        exitButton = new JButton("Exit");
        constraints.gridx = 2;
        constraints.gridy = 4;
        constraints.gridwidth = 1;
        panel.add(exitButton, constraints);

        // Add panel to the frame
        add(panel);

        // Register login button action listener
        loginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String userType = (String) userTypeComboBox.getSelectedItem();
                String username = usernameField.getText();
                String password = String.valueOf(passwordField.getPassword());

                // Perform login authentication logic here
                boolean isAuthenticated = false;
                if (userType.equals("Owner") && username.equals("a") && password.equals("a")) {
                    isAuthenticated = true;
                } else if (userType.equals("Employee") && username.equals("b") && password.equals("b")) {
                    isAuthenticated = true;
                }

                if (isAuthenticated) {
                    JOptionPane.showMessageDialog(GemsDatabaseGUI.this,
                            "Login successful!",
                            "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(GemsDatabaseGUI.this,
                            "Invalid username or password. Please try again.",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        });

        // Register show password checkbox action listener
        showPasswordCheckBox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (showPasswordCheckBox.isSelected()) {
                    passwordField.setEchoChar((char) 0); // Show password
                } else {
                    passwordField.setEchoChar('\u2022'); // Hide password
                }
            }
        });

        // Register exit button action listener
        exitButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.exit(0); // Exit the application
            }
        });
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                new GemsDatabaseGUI().setVisible(true);
            }
        });
    }
}
